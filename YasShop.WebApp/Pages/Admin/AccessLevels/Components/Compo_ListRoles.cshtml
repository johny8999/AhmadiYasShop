@page "/{Culture}/Admin/AccessLevel/Compo/ListRoles"
@model YasShop.WebApp.Pages.Admin.AccessLevels.Components.Compo_ListRolesModel

@if(Model.Input.AccessLevelId is not null)
{
    <script>
        function isSelected(_name) {
            var RolesName = '@string.Join(",", (string[])ViewData["SelectedRoles"])';
            if (RolesName.includes(_name+',')) {
                return "checked";
            }
            else {
                return "";
            }
        }
    </script>    
}
else
{
    <script>
        function isSelected(_name) {
            return '';
        }
    </script>
}
<script>

        function onDataBound(ev){
       var data = this.dataSource.data();

        $.each(data, function (i, row) {
            if (row.get("HasChild") == false) {
                $('tr[data-uid="' + row.uid + '"]').find(".k-hierarchy-cell a").remove();
            }
        });


         var grid = $('#ListRoles').data('kendoGrid');
        $('.k-master-row').each(function(index) {
            grid.expandRow(this);
            grid.collapsRow(this);
        });
    }
</script>

<div class="k-lang">
    @(Html.Kendo()
    .Grid<vmCompoListRoles>()
        .Name("ListRoles")
        .DefaultSettings(Localizer)
        .Columns(col=>{
            col.Bound(a=>a.Id).Sortable(false).Width(50).ClientTemplate("<input #=isSelected(RoleName)# type='checkbox' class='k-checkbox' value='#=RoleName#'/>");
            col.Bound(a=>a.PageName).Sortable(false);
            col.Bound(a=>a.RoleName).Sortable(false);
            col.Bound(a=>a.Description).Sortable(false);
        })
        .PersistSelection()
        .Events(a=>{
            a.DataBound("onDataBound");
        })
        .ClientDetailTemplateId("ListAccLevelTmpl")
        .DataSource(a=>a.Ajax().Model(a=>a.Id(b=>b.Id)).Read(a=>a.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListRoles?handler=ReadData&ParentId=#=Id#").Data("ForgeryToken")))
        )
</div>
<script id="ListAccLevelTmpl">
  @(Html.Kendo()
    .Grid<vmCompoListRoles>()
        .Name("ListRoles_Child#=Id#")
        .DefaultSettings(Localizer)
        .Columns(col=>{
            col.Bound(a=>a.Id).Sortable(false).Width(50).ClientTemplate("<input \\#=isSelected(RoleName)\\# type='checkbox' class='k-checkbox' value='\\#=RoleName\\#'/>");
            col.Bound(a=>a.PageName).Sortable(false);
            col.Bound(a=>a.RoleName).Sortable(false);
            col.Bound(a=>a.Description).Sortable(false);
        })
        .PersistSelection()
        .Events(a=>{
            a.DataBound("onDataBound");
        })
        .ClientDetailTemplateId("ListAccLevelTmpl_Child")
              .DataSource(a => a.Ajax().Model(a => a.Id(b => b.Id)).Read(a => a.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListRoles?handler=ReadData&ParentId=#=Id#").Data("ForgeryToken")))
        .ToClientTemplate())
</script>

<script id="ListAccLevelTmpl_Child">
  @(Html.Kendo()
    .Grid<vmCompoListRoles>()
        .Name("ListRoles_Child#=Id#")
        .DefaultSettings(Localizer)
        .Columns(col=>{
            col.Bound(a=>a.Id).Sortable(false).Width(50).ClientTemplate("<input \\#=isSelected(RoleName)\\# type='checkbox' class='k-checkbox' value='\\#=RoleName\\#'/>");
            col.Bound(a=>a.PageName).Sortable(false);
            col.Bound(a=>a.RoleName).Sortable(false);
            col.Bound(a=>a.Description).Sortable(false);
        })
        .PersistSelection()
        .Events(a=>{
            a.DataBound("onDataBound");
        })
              .DataSource(a => a.Ajax().Read(a => a.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListRoles?handler=ReadData&ParentId=#=Id#").Data("ForgeryToken")))
        .ToClientTemplate())
</script>

